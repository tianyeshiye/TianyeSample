/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package sample.avro.bean;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class InputCanInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -771998528839442240L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InputCanInfo\",\"namespace\":\"org.apache.avro.example.bean\",\"fields\":[{\"name\":\"canId\",\"type\":\"string\"},{\"name\":\"canTime\",\"type\":[\"long\",\"null\"]},{\"name\":\"canData\",\"type\":{\"type\":\"record\",\"name\":\"CanData\",\"fields\":[{\"name\":\"c001\",\"type\":{\"type\":\"record\",\"name\":\"C001\",\"fields\":[{\"name\":\"c001_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c001_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c001_dummy17\",\"type\":[\"long\",\"null\"]}]}},{\"name\":\"c022\",\"type\":{\"type\":\"record\",\"name\":\"C022\",\"fields\":[{\"name\":\"c022_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c022_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c022_dummy17\",\"type\":[\"long\",\"null\"]},{\"name\":\"c022_dummy18\",\"type\":[\"long\",\"null\"]}]}},{\"name\":\"c122\",\"type\":{\"type\":\"record\",\"name\":\"C122\",\"fields\":[{\"name\":\"c122_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy17\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy18\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy19\",\"type\":[\"long\",\"null\"]}]}},{\"name\":\"c201\",\"type\":{\"type\":\"record\",\"name\":\"C201\",\"fields\":[{\"name\":\"c201_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy17\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy18\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy19\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy20\",\"type\":[\"long\",\"null\"]}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<InputCanInfo> ENCODER =
      new BinaryMessageEncoder<InputCanInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<InputCanInfo> DECODER =
      new BinaryMessageDecoder<InputCanInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<InputCanInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<InputCanInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<InputCanInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this InputCanInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a InputCanInfo from a ByteBuffer. */
  public static InputCanInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence canId;
  @Deprecated public java.lang.Long canTime;
  @Deprecated public sample.avro.bean.CanData canData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public InputCanInfo() {}

  /**
   * All-args constructor.
   * @param canId The new value for canId
   * @param canTime The new value for canTime
   * @param canData The new value for canData
   */
  public InputCanInfo(java.lang.CharSequence canId, java.lang.Long canTime, sample.avro.bean.CanData canData) {
    this.canId = canId;
    this.canTime = canTime;
    this.canData = canData;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return canId;
    case 1: return canTime;
    case 2: return canData;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: canId = (java.lang.CharSequence)value$; break;
    case 1: canTime = (java.lang.Long)value$; break;
    case 2: canData = (sample.avro.bean.CanData)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'canId' field.
   * @return The value of the 'canId' field.
   */
  public java.lang.CharSequence getCanId() {
    return canId;
  }

  /**
   * Sets the value of the 'canId' field.
   * @param value the value to set.
   */
  public void setCanId(java.lang.CharSequence value) {
    this.canId = value;
  }

  /**
   * Gets the value of the 'canTime' field.
   * @return The value of the 'canTime' field.
   */
  public java.lang.Long getCanTime() {
    return canTime;
  }

  /**
   * Sets the value of the 'canTime' field.
   * @param value the value to set.
   */
  public void setCanTime(java.lang.Long value) {
    this.canTime = value;
  }

  /**
   * Gets the value of the 'canData' field.
   * @return The value of the 'canData' field.
   */
  public sample.avro.bean.CanData getCanData() {
    return canData;
  }

  /**
   * Sets the value of the 'canData' field.
   * @param value the value to set.
   */
  public void setCanData(sample.avro.bean.CanData value) {
    this.canData = value;
  }

  /**
   * Creates a new InputCanInfo RecordBuilder.
   * @return A new InputCanInfo RecordBuilder
   */
  public static sample.avro.bean.InputCanInfo.Builder newBuilder() {
    return new sample.avro.bean.InputCanInfo.Builder();
  }

  /**
   * Creates a new InputCanInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new InputCanInfo RecordBuilder
   */
  public static sample.avro.bean.InputCanInfo.Builder newBuilder(sample.avro.bean.InputCanInfo.Builder other) {
    return new sample.avro.bean.InputCanInfo.Builder(other);
  }

  /**
   * Creates a new InputCanInfo RecordBuilder by copying an existing InputCanInfo instance.
   * @param other The existing instance to copy.
   * @return A new InputCanInfo RecordBuilder
   */
  public static sample.avro.bean.InputCanInfo.Builder newBuilder(sample.avro.bean.InputCanInfo other) {
    return new sample.avro.bean.InputCanInfo.Builder(other);
  }

  /**
   * RecordBuilder for InputCanInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InputCanInfo>
    implements org.apache.avro.data.RecordBuilder<InputCanInfo> {

    private java.lang.CharSequence canId;
    private java.lang.Long canTime;
    private sample.avro.bean.CanData canData;
    private sample.avro.bean.CanData.Builder canDataBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(sample.avro.bean.InputCanInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.canId)) {
        this.canId = data().deepCopy(fields()[0].schema(), other.canId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.canTime)) {
        this.canTime = data().deepCopy(fields()[1].schema(), other.canTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.canData)) {
        this.canData = data().deepCopy(fields()[2].schema(), other.canData);
        fieldSetFlags()[2] = true;
      }
      if (other.hasCanDataBuilder()) {
        this.canDataBuilder = sample.avro.bean.CanData.newBuilder(other.getCanDataBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing InputCanInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(sample.avro.bean.InputCanInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.canId)) {
        this.canId = data().deepCopy(fields()[0].schema(), other.canId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.canTime)) {
        this.canTime = data().deepCopy(fields()[1].schema(), other.canTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.canData)) {
        this.canData = data().deepCopy(fields()[2].schema(), other.canData);
        fieldSetFlags()[2] = true;
      }
      this.canDataBuilder = null;
    }

    /**
      * Gets the value of the 'canId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCanId() {
      return canId;
    }

    /**
      * Sets the value of the 'canId' field.
      * @param value The value of 'canId'.
      * @return This builder.
      */
    public sample.avro.bean.InputCanInfo.Builder setCanId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.canId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'canId' field has been set.
      * @return True if the 'canId' field has been set, false otherwise.
      */
    public boolean hasCanId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'canId' field.
      * @return This builder.
      */
    public sample.avro.bean.InputCanInfo.Builder clearCanId() {
      canId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'canTime' field.
      * @return The value.
      */
    public java.lang.Long getCanTime() {
      return canTime;
    }

    /**
      * Sets the value of the 'canTime' field.
      * @param value The value of 'canTime'.
      * @return This builder.
      */
    public sample.avro.bean.InputCanInfo.Builder setCanTime(java.lang.Long value) {
      validate(fields()[1], value);
      this.canTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'canTime' field has been set.
      * @return True if the 'canTime' field has been set, false otherwise.
      */
    public boolean hasCanTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'canTime' field.
      * @return This builder.
      */
    public sample.avro.bean.InputCanInfo.Builder clearCanTime() {
      canTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'canData' field.
      * @return The value.
      */
    public sample.avro.bean.CanData getCanData() {
      return canData;
    }

    /**
      * Sets the value of the 'canData' field.
      * @param value The value of 'canData'.
      * @return This builder.
      */
    public sample.avro.bean.InputCanInfo.Builder setCanData(sample.avro.bean.CanData value) {
      validate(fields()[2], value);
      this.canDataBuilder = null;
      this.canData = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'canData' field has been set.
      * @return True if the 'canData' field has been set, false otherwise.
      */
    public boolean hasCanData() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'canData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sample.avro.bean.CanData.Builder getCanDataBuilder() {
      if (canDataBuilder == null) {
        if (hasCanData()) {
          setCanDataBuilder(sample.avro.bean.CanData.newBuilder(canData));
        } else {
          setCanDataBuilder(sample.avro.bean.CanData.newBuilder());
        }
      }
      return canDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'canData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sample.avro.bean.InputCanInfo.Builder setCanDataBuilder(sample.avro.bean.CanData.Builder value) {
      clearCanData();
      canDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'canData' field has an active Builder instance
     * @return True if the 'canData' field has an active Builder instance
     */
    public boolean hasCanDataBuilder() {
      return canDataBuilder != null;
    }

    /**
      * Clears the value of the 'canData' field.
      * @return This builder.
      */
    public sample.avro.bean.InputCanInfo.Builder clearCanData() {
      canData = null;
      canDataBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public InputCanInfo build() {
      try {
        InputCanInfo record = new InputCanInfo();
        record.canId = fieldSetFlags()[0] ? this.canId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.canTime = fieldSetFlags()[1] ? this.canTime : (java.lang.Long) defaultValue(fields()[1]);
        if (canDataBuilder != null) {
          record.canData = this.canDataBuilder.build();
        } else {
          record.canData = fieldSetFlags()[2] ? this.canData : (sample.avro.bean.CanData) defaultValue(fields()[2]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<InputCanInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<InputCanInfo>)MODEL$.createDatumWriter(SCHEMA$);

//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<InputCanInfo>
//    READER$ = (org.apache.avro.io.DatumReader<InputCanInfo>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }

}
