/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package sample.avro.bean;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CanData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1944822958147769999L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CanData\",\"namespace\":\"org.apache.avro.example.bean\",\"fields\":[{\"name\":\"c001\",\"type\":{\"type\":\"record\",\"name\":\"C001\",\"fields\":[{\"name\":\"c001_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c001_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c001_dummy17\",\"type\":[\"long\",\"null\"]}]}},{\"name\":\"c022\",\"type\":{\"type\":\"record\",\"name\":\"C022\",\"fields\":[{\"name\":\"c022_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c022_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c022_dummy17\",\"type\":[\"long\",\"null\"]},{\"name\":\"c022_dummy18\",\"type\":[\"long\",\"null\"]}]}},{\"name\":\"c122\",\"type\":{\"type\":\"record\",\"name\":\"C122\",\"fields\":[{\"name\":\"c122_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy17\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy18\",\"type\":[\"long\",\"null\"]},{\"name\":\"c122_dummy19\",\"type\":[\"long\",\"null\"]}]}},{\"name\":\"c201\",\"type\":{\"type\":\"record\",\"name\":\"C201\",\"fields\":[{\"name\":\"c201_dummy15\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy16\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy17\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy18\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy19\",\"type\":[\"long\",\"null\"]},{\"name\":\"c201_dummy20\",\"type\":[\"long\",\"null\"]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CanData> ENCODER =
      new BinaryMessageEncoder<CanData>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CanData> DECODER =
      new BinaryMessageDecoder<CanData>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CanData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CanData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CanData>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CanData to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CanData from a ByteBuffer. */
  public static CanData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public sample.avro.bean.C001 c001;
  @Deprecated public sample.avro.bean.C022 c022;
  @Deprecated public sample.avro.bean.C122 c122;
  @Deprecated public sample.avro.bean.C201 c201;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CanData() {}

  /**
   * All-args constructor.
   * @param c001 The new value for c001
   * @param c022 The new value for c022
   * @param c122 The new value for c122
   * @param c201 The new value for c201
   */
  public CanData(sample.avro.bean.C001 c001, sample.avro.bean.C022 c022, sample.avro.bean.C122 c122, sample.avro.bean.C201 c201) {
    this.c001 = c001;
    this.c022 = c022;
    this.c122 = c122;
    this.c201 = c201;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return c001;
    case 1: return c022;
    case 2: return c122;
    case 3: return c201;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: c001 = (sample.avro.bean.C001)value$; break;
    case 1: c022 = (sample.avro.bean.C022)value$; break;
    case 2: c122 = (sample.avro.bean.C122)value$; break;
    case 3: c201 = (sample.avro.bean.C201)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'c001' field.
   * @return The value of the 'c001' field.
   */
  public sample.avro.bean.C001 getC001() {
    return c001;
  }

  /**
   * Sets the value of the 'c001' field.
   * @param value the value to set.
   */
  public void setC001(sample.avro.bean.C001 value) {
    this.c001 = value;
  }

  /**
   * Gets the value of the 'c022' field.
   * @return The value of the 'c022' field.
   */
  public sample.avro.bean.C022 getC022() {
    return c022;
  }

  /**
   * Sets the value of the 'c022' field.
   * @param value the value to set.
   */
  public void setC022(sample.avro.bean.C022 value) {
    this.c022 = value;
  }

  /**
   * Gets the value of the 'c122' field.
   * @return The value of the 'c122' field.
   */
  public sample.avro.bean.C122 getC122() {
    return c122;
  }

  /**
   * Sets the value of the 'c122' field.
   * @param value the value to set.
   */
  public void setC122(sample.avro.bean.C122 value) {
    this.c122 = value;
  }

  /**
   * Gets the value of the 'c201' field.
   * @return The value of the 'c201' field.
   */
  public sample.avro.bean.C201 getC201() {
    return c201;
  }

  /**
   * Sets the value of the 'c201' field.
   * @param value the value to set.
   */
  public void setC201(sample.avro.bean.C201 value) {
    this.c201 = value;
  }

  /**
   * Creates a new CanData RecordBuilder.
   * @return A new CanData RecordBuilder
   */
  public static sample.avro.bean.CanData.Builder newBuilder() {
    return new sample.avro.bean.CanData.Builder();
  }

  /**
   * Creates a new CanData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CanData RecordBuilder
   */
  public static sample.avro.bean.CanData.Builder newBuilder(sample.avro.bean.CanData.Builder other) {
    return new sample.avro.bean.CanData.Builder(other);
  }

  /**
   * Creates a new CanData RecordBuilder by copying an existing CanData instance.
   * @param other The existing instance to copy.
   * @return A new CanData RecordBuilder
   */
  public static sample.avro.bean.CanData.Builder newBuilder(sample.avro.bean.CanData other) {
    return new sample.avro.bean.CanData.Builder(other);
  }

  /**
   * RecordBuilder for CanData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CanData>
    implements org.apache.avro.data.RecordBuilder<CanData> {

    private sample.avro.bean.C001 c001;
    private sample.avro.bean.C001.Builder c001Builder;
    private sample.avro.bean.C022 c022;
    private sample.avro.bean.C022.Builder c022Builder;
    private sample.avro.bean.C122 c122;
    private sample.avro.bean.C122.Builder c122Builder;
    private sample.avro.bean.C201 c201;
    private sample.avro.bean.C201.Builder c201Builder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(sample.avro.bean.CanData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.c001)) {
        this.c001 = data().deepCopy(fields()[0].schema(), other.c001);
        fieldSetFlags()[0] = true;
      }
      if (other.hasC001Builder()) {
        this.c001Builder = sample.avro.bean.C001.newBuilder(other.getC001Builder());
      }
      if (isValidValue(fields()[1], other.c022)) {
        this.c022 = data().deepCopy(fields()[1].schema(), other.c022);
        fieldSetFlags()[1] = true;
      }
      if (other.hasC022Builder()) {
        this.c022Builder = sample.avro.bean.C022.newBuilder(other.getC022Builder());
      }
      if (isValidValue(fields()[2], other.c122)) {
        this.c122 = data().deepCopy(fields()[2].schema(), other.c122);
        fieldSetFlags()[2] = true;
      }
      if (other.hasC122Builder()) {
        this.c122Builder = sample.avro.bean.C122.newBuilder(other.getC122Builder());
      }
      if (isValidValue(fields()[3], other.c201)) {
        this.c201 = data().deepCopy(fields()[3].schema(), other.c201);
        fieldSetFlags()[3] = true;
      }
      if (other.hasC201Builder()) {
        this.c201Builder = sample.avro.bean.C201.newBuilder(other.getC201Builder());
      }
    }

    /**
     * Creates a Builder by copying an existing CanData instance
     * @param other The existing instance to copy.
     */
    private Builder(sample.avro.bean.CanData other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.c001)) {
        this.c001 = data().deepCopy(fields()[0].schema(), other.c001);
        fieldSetFlags()[0] = true;
      }
      this.c001Builder = null;
      if (isValidValue(fields()[1], other.c022)) {
        this.c022 = data().deepCopy(fields()[1].schema(), other.c022);
        fieldSetFlags()[1] = true;
      }
      this.c022Builder = null;
      if (isValidValue(fields()[2], other.c122)) {
        this.c122 = data().deepCopy(fields()[2].schema(), other.c122);
        fieldSetFlags()[2] = true;
      }
      this.c122Builder = null;
      if (isValidValue(fields()[3], other.c201)) {
        this.c201 = data().deepCopy(fields()[3].schema(), other.c201);
        fieldSetFlags()[3] = true;
      }
      this.c201Builder = null;
    }

    /**
      * Gets the value of the 'c001' field.
      * @return The value.
      */
    public sample.avro.bean.C001 getC001() {
      return c001;
    }

    /**
      * Sets the value of the 'c001' field.
      * @param value The value of 'c001'.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder setC001(sample.avro.bean.C001 value) {
      validate(fields()[0], value);
      this.c001Builder = null;
      this.c001 = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'c001' field has been set.
      * @return True if the 'c001' field has been set, false otherwise.
      */
    public boolean hasC001() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'c001' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sample.avro.bean.C001.Builder getC001Builder() {
      if (c001Builder == null) {
        if (hasC001()) {
          setC001Builder(sample.avro.bean.C001.newBuilder(c001));
        } else {
          setC001Builder(sample.avro.bean.C001.newBuilder());
        }
      }
      return c001Builder;
    }

    /**
     * Sets the Builder instance for the 'c001' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sample.avro.bean.CanData.Builder setC001Builder(sample.avro.bean.C001.Builder value) {
      clearC001();
      c001Builder = value;
      return this;
    }

    /**
     * Checks whether the 'c001' field has an active Builder instance
     * @return True if the 'c001' field has an active Builder instance
     */
    public boolean hasC001Builder() {
      return c001Builder != null;
    }

    /**
      * Clears the value of the 'c001' field.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder clearC001() {
      c001 = null;
      c001Builder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'c022' field.
      * @return The value.
      */
    public sample.avro.bean.C022 getC022() {
      return c022;
    }

    /**
      * Sets the value of the 'c022' field.
      * @param value The value of 'c022'.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder setC022(sample.avro.bean.C022 value) {
      validate(fields()[1], value);
      this.c022Builder = null;
      this.c022 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'c022' field has been set.
      * @return True if the 'c022' field has been set, false otherwise.
      */
    public boolean hasC022() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'c022' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sample.avro.bean.C022.Builder getC022Builder() {
      if (c022Builder == null) {
        if (hasC022()) {
          setC022Builder(sample.avro.bean.C022.newBuilder(c022));
        } else {
          setC022Builder(sample.avro.bean.C022.newBuilder());
        }
      }
      return c022Builder;
    }

    /**
     * Sets the Builder instance for the 'c022' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sample.avro.bean.CanData.Builder setC022Builder(sample.avro.bean.C022.Builder value) {
      clearC022();
      c022Builder = value;
      return this;
    }

    /**
     * Checks whether the 'c022' field has an active Builder instance
     * @return True if the 'c022' field has an active Builder instance
     */
    public boolean hasC022Builder() {
      return c022Builder != null;
    }

    /**
      * Clears the value of the 'c022' field.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder clearC022() {
      c022 = null;
      c022Builder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'c122' field.
      * @return The value.
      */
    public sample.avro.bean.C122 getC122() {
      return c122;
    }

    /**
      * Sets the value of the 'c122' field.
      * @param value The value of 'c122'.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder setC122(sample.avro.bean.C122 value) {
      validate(fields()[2], value);
      this.c122Builder = null;
      this.c122 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'c122' field has been set.
      * @return True if the 'c122' field has been set, false otherwise.
      */
    public boolean hasC122() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'c122' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sample.avro.bean.C122.Builder getC122Builder() {
      if (c122Builder == null) {
        if (hasC122()) {
          setC122Builder(sample.avro.bean.C122.newBuilder(c122));
        } else {
          setC122Builder(sample.avro.bean.C122.newBuilder());
        }
      }
      return c122Builder;
    }

    /**
     * Sets the Builder instance for the 'c122' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sample.avro.bean.CanData.Builder setC122Builder(sample.avro.bean.C122.Builder value) {
      clearC122();
      c122Builder = value;
      return this;
    }

    /**
     * Checks whether the 'c122' field has an active Builder instance
     * @return True if the 'c122' field has an active Builder instance
     */
    public boolean hasC122Builder() {
      return c122Builder != null;
    }

    /**
      * Clears the value of the 'c122' field.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder clearC122() {
      c122 = null;
      c122Builder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'c201' field.
      * @return The value.
      */
    public sample.avro.bean.C201 getC201() {
      return c201;
    }

    /**
      * Sets the value of the 'c201' field.
      * @param value The value of 'c201'.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder setC201(sample.avro.bean.C201 value) {
      validate(fields()[3], value);
      this.c201Builder = null;
      this.c201 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'c201' field has been set.
      * @return True if the 'c201' field has been set, false otherwise.
      */
    public boolean hasC201() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'c201' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sample.avro.bean.C201.Builder getC201Builder() {
      if (c201Builder == null) {
        if (hasC201()) {
          setC201Builder(sample.avro.bean.C201.newBuilder(c201));
        } else {
          setC201Builder(sample.avro.bean.C201.newBuilder());
        }
      }
      return c201Builder;
    }

    /**
     * Sets the Builder instance for the 'c201' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sample.avro.bean.CanData.Builder setC201Builder(sample.avro.bean.C201.Builder value) {
      clearC201();
      c201Builder = value;
      return this;
    }

    /**
     * Checks whether the 'c201' field has an active Builder instance
     * @return True if the 'c201' field has an active Builder instance
     */
    public boolean hasC201Builder() {
      return c201Builder != null;
    }

    /**
      * Clears the value of the 'c201' field.
      * @return This builder.
      */
    public sample.avro.bean.CanData.Builder clearC201() {
      c201 = null;
      c201Builder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CanData build() {
      try {
        CanData record = new CanData();
        if (c001Builder != null) {
          record.c001 = this.c001Builder.build();
        } else {
          record.c001 = fieldSetFlags()[0] ? this.c001 : (sample.avro.bean.C001) defaultValue(fields()[0]);
        }
        if (c022Builder != null) {
          record.c022 = this.c022Builder.build();
        } else {
          record.c022 = fieldSetFlags()[1] ? this.c022 : (sample.avro.bean.C022) defaultValue(fields()[1]);
        }
        if (c122Builder != null) {
          record.c122 = this.c122Builder.build();
        } else {
          record.c122 = fieldSetFlags()[2] ? this.c122 : (sample.avro.bean.C122) defaultValue(fields()[2]);
        }
        if (c201Builder != null) {
          record.c201 = this.c201Builder.build();
        } else {
          record.c201 = fieldSetFlags()[3] ? this.c201 : (sample.avro.bean.C201) defaultValue(fields()[3]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CanData>
    WRITER$ = (org.apache.avro.io.DatumWriter<CanData>)MODEL$.createDatumWriter(SCHEMA$);

//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<CanData>
//    READER$ = (org.apache.avro.io.DatumReader<CanData>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }

}
